{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/inias/Desktop/ap/j2s1/WebFrameworks/Examenopgave/Quiz_opgave/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizService {\n  constructor(_http) {\n    this._http = _http;\n    this.name = \"\";\n    this.questionsList = [];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.loadQuestions();\n    })();\n  }\n\n  get Name() {\n    return this.name;\n  }\n\n  loadQuestions() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let questions = yield _this2.getQuestionsFromAPI();\n      _this2.questionsList = questions;\n    })();\n  }\n\n  getQuestionsFromAPI() {\n    return lastValueFrom(this._http.get(\"http://localhost:3000/questions\"));\n  }\n\n  getQuestionsByDifficulty(difficulty, amount) {\n    let qByDiff = this.questionsList.filter(q => q.difficulty == difficulty); // console.log(qByDiff);\n\n    let usedIndexes = [];\n    let questions = [];\n    console.log(this.questionsList); // for (let i = 0; i < amount; i++) {\n    //   let index = Math.floor((Math.random()*qByDiff.length)+1);\n    //   while (usedIndexes.find((p) => p == index)) {\n    //     index = Math.floor((Math.random()*qByDiff.length)+1);\n    //   }\n    //   usedIndexes.push(index);\n    //   questions.push(qByDiff[index]);\n    // }\n\n    return questions;\n  }\n\n}\n\nQuizService.ɵfac = function QuizService_Factory(t) {\n  return new (t || QuizService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nQuizService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuizService,\n  factory: QuizService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,aAAT,QAA8B,6BAA9B;;;AAMA,OAAM,MAAOC,WAAP,CAAkB;EAKtBC,YAAoBC,KAApB,EAAqC;IAAjB;IAHZ,YAAe,EAAf;IACA,qBAA4B,EAA5B;EAGP;;EAEKC,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,aAAL;IADY;EAEb;;EAEO,IAAJC,IAAI;IACN,OAAO,KAAKC,IAAZ;EACD;;EAEKF,aAAa;IAAA;;IAAA;MACjB,IAAIG,SAAS,SAAS,MAAI,CAACC,mBAAL,EAAtB;MACA,MAAI,CAACC,aAAL,GAAqBF,SAArB;IAFiB;EAGlB;;EAEMC,mBAAmB;IACxB,OAAOT,aAAa,CAAC,KAAKG,KAAL,CAAWQ,GAAX,CAA2B,iCAA3B,CAAD,CAApB;EACD;;EAEDC,wBAAwB,CAACC,UAAD,EAAqBC,MAArB,EAAmC;IACzD,IAAIC,OAAO,GAAc,KAAKL,aAAL,CAAmBM,MAAnB,CAA2BC,CAAD,IAAOA,CAAC,CAACJ,UAAF,IAAgBA,UAAjD,CAAzB,CADyD,CAEzD;;IACA,IAAIK,WAAW,GAAa,EAA5B;IACA,IAAIV,SAAS,GAAe,EAA5B;IAEAW,OAAO,CAACC,GAAR,CAAY,KAAKV,aAAjB,EANyD,CAQzD;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;;IAEA,OAAOF,SAAP;EACD;;AA5CqB;;;mBAAXP,aAAWoB;AAAA;;;SAAXpB;EAAWqB,SAAXrB,WAAW;EAAAsB,YAFV","names":["lastValueFrom","QuizService","constructor","_http","ngOnInit","loadQuestions","Name","name","questions","getQuestionsFromAPI","questionsList","get","getQuestionsByDifficulty","difficulty","amount","qByDiff","filter","q","usedIndexes","console","log","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\inias\\Desktop\\ap\\j2s1\\WebFrameworks\\Examenopgave\\Quiz_opgave\\src\\app\\services\\quiz.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\nimport { Question } from './types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService implements OnInit{\n\n  private name: string = \"\";\n  private questionsList: Question[] = [];\n\n  constructor(private _http: HttpClient) {\n  }\n\n  async ngOnInit(): void {\n    this.loadQuestions();\n  }\n\n  get Name(): string {\n    return this.name;\n  }\n\n  async loadQuestions() {\n    let questions = await this.getQuestionsFromAPI();\n    this.questionsList = questions;\n  }\n\n  public getQuestionsFromAPI() : Promise<Question[]> {\n    return lastValueFrom(this._http.get<Question[]>(\"http://localhost:3000/questions\"));\n  }\n\n  getQuestionsByDifficulty(difficulty: string, amount: number): Question[] {\n    let qByDiff:Question[] = this.questionsList.filter((q) => q.difficulty == difficulty);\n    // console.log(qByDiff);\n    let usedIndexes: number[] = [];\n    let questions: Question[] = [];\n\n    console.log(this.questionsList);\n\n    // for (let i = 0; i < amount; i++) {\n    //   let index = Math.floor((Math.random()*qByDiff.length)+1);\n    //   while (usedIndexes.find((p) => p == index)) {\n    //     index = Math.floor((Math.random()*qByDiff.length)+1);\n    //   }\n    //   usedIndexes.push(index);\n\n    //   questions.push(qByDiff[index]);\n    // }\n\n    return questions;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}