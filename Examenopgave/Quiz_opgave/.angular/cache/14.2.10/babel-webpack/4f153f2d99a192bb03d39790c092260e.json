{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/inias/Desktop/ap/j2s1/WebFrameworks/Examenopgave/Quiz_opgave/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction QuizComponent_ng_container_4_ng_container_2_div_3_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r10);\n  }\n}\n\nfunction QuizComponent_ng_container_4_ng_container_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"select\", 3, 4);\n    i0.ɵɵlistener(\"change\", function QuizComponent_ng_container_4_ng_container_2_div_3_Template_select_change_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n\n      const _r8 = i0.ɵɵreference(2);\n\n      const i_r3 = i0.ɵɵnextContext(2).index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.answer(i_r3, _r8.value));\n    });\n    i0.ɵɵtemplate(3, QuizComponent_ng_container_4_ng_container_2_div_3_option_3_Template, 2, 1, \"option\", 1);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\n\nfunction QuizComponent_ng_container_4_ng_container_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function QuizComponent_ng_container_4_ng_container_2_div_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const i_r3 = i0.ɵɵnextContext(2).index;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.answer(i_r3, \"True\"));\n    });\n    i0.ɵɵtext(2, \"True\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function QuizComponent_ng_container_4_ng_container_2_div_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const i_r3 = i0.ɵɵnextContext(2).index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.answer(i_r3, \"False\"));\n    });\n    i0.ɵɵtext(4, \"False\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction QuizComponent_ng_container_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, QuizComponent_ng_container_4_ng_container_2_div_3_Template, 4, 1, \"div\", 2);\n    i0.ɵɵtemplate(4, QuizComponent_ng_container_4_ng_container_2_div_4_Template, 5, 0, \"div\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.question);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.type == \"multiple\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r2.type == \"boolean\");\n  }\n}\n\nfunction QuizComponent_ng_container_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" You answered '\", ctx_r5.myRecentAnswer, \"' and the answer was '\", question_r2.correct_answer, \"' \");\n  }\n}\n\nfunction QuizComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtemplate(2, QuizComponent_ng_container_4_ng_container_2_Template, 5, 3, \"ng-container\", 2);\n    i0.ɵɵtemplate(3, QuizComponent_ng_container_4_div_3_Template, 2, 2, \"div\", 2);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r0.recentAnswerCorrect[ctx_r0.index]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.answered[i_r3]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.answered[i_r3]);\n  }\n}\n\nfunction QuizComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\");\n    i0.ɵɵtext(1, \"Finish Quiz\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class QuizComponent {\n  constructor(quizSvc, route) {\n    this.quizSvc = quizSvc;\n    this.route = route;\n    this.questions = [];\n    this.answered = [];\n    this.completed = false;\n    this.points = 0;\n    this.qAnswered = 0;\n    this.myRecentAnswer = \"\";\n    this.recentAnswerCorrect = [];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let difficulty = \"\";\n\n      _this.route.paramMap.subscribe(params => {\n        difficulty = params.get(\"diff\");\n      });\n\n      _this.questions = _this.quizSvc.getQuestionsByDifficulty(difficulty, 10);\n      console.log(_this.questions);\n\n      for (let i = 0; i < 10; i++) {\n        _this.answered.push(false);\n      }\n\n      for (let i = 0; i < 10; i++) {\n        _this.recentAnswerCorrect.push(\" \");\n      }\n    })();\n  }\n\n  answer(index, ans) {\n    let q = this.questions[index];\n    this.myRecentAnswer = ans;\n    console.log(q);\n    console.log(q.correct_answer);\n\n    if (q.correct_answer == ans) {\n      this.points++;\n      this.recentAnswerCorrect[index] = \"correct\";\n    } else {\n      this.recentAnswerCorrect[index] = \"incorrect\";\n    }\n\n    this.answered[index] = true;\n    this.qAnswered++;\n\n    if (this.qAnswered == this.questions.length) {\n      this.completed = true;\n    }\n  }\n\n}\n\nQuizComponent.ɵfac = function QuizComponent_Factory(t) {\n  return new (t || QuizComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nQuizComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizComponent,\n  selectors: [[\"app-quiz\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[2, \"padding\", \"2px\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"change\"], [\"sel1\", \"\"], [3, \"click\"]],\n  template: function QuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"10 Questions...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"div\", 0);\n      i0.ɵɵtemplate(4, QuizComponent_ng_container_4_Template, 5, 4, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, QuizComponent_button_5_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.completed);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\".correct[_ngcontent-%COMP%] {\\r\\n    border: 2px solid green;\\r\\n    background-color: lightgreen;\\r\\n}\\r\\n\\r\\n.incorrect[_ngcontent-%COMP%] {\\r\\n    border: 2px solid red;\\r\\n    background-color: pink;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1aXouY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2Qiw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsc0JBQXNCO0FBQzFCIiwiZmlsZSI6InF1aXouY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb3JyZWN0IHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjtcclxufVxyXG5cclxuLmluY29ycmVjdCB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rO1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAY4BA;IAAgDA;IAAUA;;;;;IAAVA;IAAAA;;;;;;;;IAFxDA,4BAAyC,CAAzC,EAAyC,QAAzC,EAAyC,CAAzC,EAAyC,CAAzC;IACkBA;MAAAA;;MAAA;;MAAA;MAAA;MAAA,OAAUA,+CAAV;IAA+B,CAA/B;IACVA;IACJA;;;;;IAD+BA;IAAAA;;;;;;;;IAGnCA,4BAAwC,CAAxC,EAAwC,QAAxC,EAAwC,CAAxC;IACYA;MAAAA;MAAA;MAAA;MAAA,OAASA,oCAAU,MAAV,EAAT;IAA0B,CAA1B;IAA4BA;IAAIA;IACxCA;IAAQA;MAAAA;MAAA;MAAA;MAAA,OAASA,oCAAU,OAAV,EAAT;IAA2B,CAA3B;IAA6BA;IAAKA;;;;;;IATlDA;IACIA;IAAOA;IAAqBA;IAC5BA;IAKAA;IAIJA;;;;;IAVWA;IAAAA;IACDA;IAAAA;IAKAA;IAAAA;;;;;;IAKVA;IACIA;IACJA;;;;;;IADIA;IAAAA;;;;;;IAhBZA;IAEIA;IACIA;IAYAA;IAGAA;IACJA;IACJA;;;;;;IAlBSA;IAAAA;IACcA;IAAAA;IAYTA;IAAAA;;;;;;IAQlBA;IAA0BA;IAAWA;;;;AClBzC,OAAM,MAAOC,aAAP,CAAoB;EAUxBC,YAAoBC,OAApB,EAAkDC,KAAlD,EAAuE;IAAnD;IAA8B;IARlD,iBAAwB,EAAxB;IACA,gBAAsB,EAAtB;IACA,iBAAqB,KAArB;IACA,cAAiB,CAAjB;IACA,iBAAoB,CAApB;IACA,sBAAyB,EAAzB;IACA,2BAAgC,EAAhC;EAE2E;;EAErEC,QAAQ;IAAA;;IAAA;MACZ,IAAIC,UAAU,GAAG,EAAjB;;MACA,KAAI,CAACF,KAAL,CAAWG,QAAX,CAAoBC,SAApB,CAA8BC,MAAM,IAAG;QACrCH,UAAU,GAAGG,MAAM,CAACC,GAAP,CAAW,MAAX,CAAb;MACD,CAFD;;MAIA,KAAI,CAACC,SAAL,GAAiB,KAAI,CAACR,OAAL,CAAaS,wBAAb,CAAsCN,UAAtC,EAAkD,EAAlD,CAAjB;MACAO,OAAO,CAACC,GAAR,CAAY,KAAI,CAACH,SAAjB;;MAEA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;QAC3B,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmB,KAAnB;MACD;;MAED,KAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;QAC3B,KAAI,CAACG,mBAAL,CAAyBD,IAAzB,CAA8B,GAA9B;MACD;IAfW;EAgBb;;EAEDE,MAAM,CAACC,KAAD,EAAeC,GAAf,EAA0B;IAC9B,IAAIC,CAAC,GAAG,KAAKX,SAAL,CAAeS,KAAf,CAAR;IACA,KAAKG,cAAL,GAAsBF,GAAtB;IACAR,OAAO,CAACC,GAAR,CAAYQ,CAAZ;IACAT,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACE,cAAd;;IAEA,IAAIF,CAAC,CAACE,cAAF,IAAoBH,GAAxB,EAA6B;MAC3B,KAAKI,MAAL;MACA,KAAKP,mBAAL,CAAyBE,KAAzB,IAAkC,SAAlC;IACD,CAHD,MAGO;MACL,KAAKF,mBAAL,CAAyBE,KAAzB,IAAkC,WAAlC;IACD;;IAED,KAAKJ,QAAL,CAAcI,KAAd,IAAuB,IAAvB;IACA,KAAKM,SAAL;;IAEA,IAAI,KAAKA,SAAL,IAAkB,KAAKf,SAAL,CAAegB,MAArC,EAA6C;MAC3C,KAAKC,SAAL,GAAiB,IAAjB;IACD;EACF;;AAjDuB;;;mBAAb3B,eAAaD;AAAA;;;QAAbC;EAAa4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1BjC;MAAIA;MAAeA;MAEnBA,4BAAK,CAAL,EAAK,KAAL,EAAK,CAAL;MAGQA;MAqBJA;MAEAA;MACJA;;;;MAxB2CA;MAAAA;MAuB9BA;MAAAA","names":["i0","QuizComponent","constructor","quizSvc","route","ngOnInit","difficulty","paramMap","subscribe","params","get","questions","getQuestionsByDifficulty","console","log","i","answered","push","recentAnswerCorrect","answer","index","ans","q","myRecentAnswer","correct_answer","points","qAnswered","length","completed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\inias\\Desktop\\ap\\j2s1\\WebFrameworks\\Examenopgave\\Quiz_opgave\\src\\app\\quiz\\quiz.component.html","C:\\Users\\inias\\Desktop\\ap\\j2s1\\WebFrameworks\\Examenopgave\\Quiz_opgave\\src\\app\\quiz\\quiz.component.ts"],"sourcesContent":["<h1>10 Questions...</h1>\n\n<div>\n    <div style=\"padding: 2px\">\n\n        <ng-container *ngFor=\"let question of questions, let i = index\">\n            <!-- Meekeuzevraag -->\n            <div [class]=\"recentAnswerCorrect[index]\">\n                <ng-container *ngIf=\"!answered[i]\">\n                    <label>{{question.question}}</label>  <!-- De vraag -->\n                    <div *ngIf=\"question.type == 'multiple'\">\n                        <select #sel1 (change)=\"answer(i, sel1.value)\">    <!-- Mogelijke antwoorden -->\n                            <option *ngFor=\"let option of question.options\">{{option}}</option>\n                        </select>\n                    </div>\n                    <div *ngIf=\"question.type == 'boolean'\">  <!-- Antwoord knoppen -->\n                        <button (click)=\"answer(i, 'True')\">True</button>\n                        <button (click)=\"answer(i, 'False')\">False</button>\n                    </div>\n                </ng-container>\n                <div *ngIf=\"answered[i]\">    <!-- Feedback omtrent het gekozen antwoord -->\n                    You answered '{{myRecentAnswer}}' and the answer was '{{question.correct_answer}}'\n                </div>\n                <br/>\n            </div>\n        </ng-container>\n    </div>\n\n    <button *ngIf=\"completed\">Finish Quiz</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Question } from '../services/types';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})\nexport class QuizComponent implements OnInit {\n\n  questions: Question[] = [];\n  answered: boolean[] = [];\n  completed: boolean = false;\n  points: number = 0;\n  qAnswered: number = 0;\n  myRecentAnswer: string = \"\";\n  recentAnswerCorrect: string[] = [];\n\n  constructor(private quizSvc: QuizService, private route: ActivatedRoute) {}\n\n  async ngOnInit() {\n    let difficulty = \"\";\n    this.route.paramMap.subscribe(params => {\n      difficulty = params.get(\"diff\")!;\n    });\n\n    this.questions = this.quizSvc.getQuestionsByDifficulty(difficulty, 10);\n    console.log(this.questions);\n\n    for (let i = 0; i < 10; i++) {\n      this.answered.push(false);\n    }\n\n    for (let i = 0; i < 10; i++) {\n      this.recentAnswerCorrect.push(\" \");\n    }\n  }\n\n  answer(index:number, ans: string) {\n    let q = this.questions[index];\n    this.myRecentAnswer = ans;\n    console.log(q);\n    console.log(q.correct_answer);\n\n    if (q.correct_answer == ans) {\n      this.points++;\n      this.recentAnswerCorrect[index] = \"correct\";\n    } else {\n      this.recentAnswerCorrect[index] = \"incorrect\";\n    }\n\n    this.answered[index] = true;\n    this.qAnswered++;\n\n    if (this.qAnswered == this.questions.length) {\n      this.completed = true;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}