{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/inias/Desktop/ap/j2s1/WebFrameworks/Examenopgave/Quiz_opgave/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\nimport { Question } from './types';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizService {\n  constructor(_http) {\n    this._http = _http;\n    this.name = \"\";\n    this.questionsList = [];\n    this.points = 0;\n    this.loadQuestions();\n  }\n\n  get Name() {\n    return this.name;\n  }\n\n  loadQuestions() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let questions = yield _this.getQuestionsFromAPI();\n      _this.questionsList = questions;\n    })();\n  }\n\n  getQuestionsFromAPI() {\n    return lastValueFrom(this._http.get(\"http://localhost:3000/questions\"));\n  }\n\n  getQuestionsByDifficulty(difficulty, amount) {\n    let qByDiff = this.questionsList.filter(q => q.difficulty == difficulty);\n    let usedIndexes = [];\n    let questions = []; // TODO: soms worden de vragen niet geladen (als je via de url navigeert en niet via de buttons op home component)\n\n    if (qByDiff.length > 0) {\n      for (let i = 0; i < amount; i++) {\n        let index = Math.floor(Math.random() * qByDiff.length + 1);\n\n        while (usedIndexes.find(p => p == index)) {\n          index = Math.floor(Math.random() * qByDiff.length + 1);\n        }\n\n        usedIndexes.push(index);\n        questions.push(qByDiff[index]);\n      }\n    }\n\n    return questions;\n  }\n\n  get HighScores() {\n    return this._http.get(\"http://localhost:3000/high-scores\");\n  }\n\n  finish(points) {\n    this.points = points;\n  }\n\n  get Points() {\n    return this.points;\n  }\n\n}\n\nQuizService.ɵfac = function QuizService_Factory(t) {\n  return new (t || QuizService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nQuizService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuizService,\n  factory: QuizService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAAoBC,QAApB,QAAoC,SAApC;;;AAKA,OAAM,MAAOC,WAAP,CAAkB;EAMtBC,YAAoBC,KAApB,EAAqC;IAAjB;IAJZ,YAAe,EAAf;IACA,qBAA4B,EAA5B;IACA,cAAiB,CAAjB;IAGN,KAAKC,aAAL;EACD;;EAEO,IAAJC,IAAI;IACN,OAAO,KAAKC,IAAZ;EACD;;EAEKF,aAAa;IAAA;;IAAA;MACjB,IAAIG,SAAS,SAAS,KAAI,CAACC,mBAAL,EAAtB;MACA,KAAI,CAACC,aAAL,GAAqBF,SAArB;IAFiB;EAGlB;;EAEMC,mBAAmB;IACxB,OAAOT,aAAa,CAAC,KAAKI,KAAL,CAAWO,GAAX,CAA2B,iCAA3B,CAAD,CAApB;EACD;;EAEDC,wBAAwB,CAACC,UAAD,EAAqBC,MAArB,EAAmC;IACzD,IAAIC,OAAO,GAAc,KAAKL,aAAL,CAAmBM,MAAnB,CAA2BC,CAAD,IAAOA,CAAC,CAACJ,UAAF,IAAgBA,UAAjD,CAAzB;IACA,IAAIK,WAAW,GAAa,EAA5B;IACA,IAAIV,SAAS,GAAe,EAA5B,CAHyD,CAKzD;;IACA,IAAIO,OAAO,CAACI,MAAR,GAAiB,CAArB,EAAwB;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAApB,EAA4BM,CAAC,EAA7B,EAAiC;QAC/B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAcT,OAAO,CAACI,MAAvB,GAA+B,CAA1C,CAAZ;;QACA,OAAOD,WAAW,CAACO,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,IAAIL,KAA7B,CAAP,EAA4C;UAC1CA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAcT,OAAO,CAACI,MAAvB,GAA+B,CAA1C,CAAR;QACD;;QACDD,WAAW,CAACS,IAAZ,CAAiBN,KAAjB;QAEAb,SAAS,CAACmB,IAAV,CAAeZ,OAAO,CAACM,KAAD,CAAtB;MACD;IACF;;IAED,OAAOb,SAAP;EACD;;EAEa,IAAVoB,UAAU;IACZ,OAAO,KAAKxB,KAAL,CAAWO,GAAX,CAAe,mCAAf,CAAP;EACD;;EAEDkB,MAAM,CAACC,MAAD,EAAc;IAClB,KAAKA,MAAL,GAAcA,MAAd;EACD;;EAES,IAANC,MAAM;IACR,OAAO,KAAKD,MAAZ;EACD;;AAtDqB;;;mBAAX5B,aAAW8B;AAAA;;;SAAX9B;EAAW+B,SAAX/B,WAAW;EAAAgC,YAFV","names":["lastValueFrom","Question","QuizService","constructor","_http","loadQuestions","Name","name","questions","getQuestionsFromAPI","questionsList","get","getQuestionsByDifficulty","difficulty","amount","qByDiff","filter","q","usedIndexes","length","i","index","Math","floor","random","find","p","push","HighScores","finish","points","Points","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\inias\\Desktop\\ap\\j2s1\\WebFrameworks\\Examenopgave\\Quiz_opgave\\src\\app\\services\\quiz.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\nimport { HighScore, Question } from './types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  private name: string = \"\";\n  private questionsList: Question[] = [];\n  private points: number = 0;\n\n  constructor(private _http: HttpClient) {\n    this.loadQuestions();\n  }\n\n  get Name(): string {\n    return this.name;\n  }\n\n  async loadQuestions() {\n    let questions = await this.getQuestionsFromAPI();\n    this.questionsList = questions;\n  }\n\n  public getQuestionsFromAPI() : Promise<Question[]> {\n    return lastValueFrom(this._http.get<Question[]>(\"http://localhost:3000/questions\"));\n  }\n\n  getQuestionsByDifficulty(difficulty: string, amount: number): Question[] {\n    let qByDiff:Question[] = this.questionsList.filter((q) => q.difficulty == difficulty);\n    let usedIndexes: number[] = [];\n    let questions: Question[] = [];\n    \n    // TODO: soms worden de vragen niet geladen (als je via de url navigeert en niet via de buttons op home component)\n    if (qByDiff.length > 0) {\n      for (let i = 0; i < amount; i++) {\n        let index = Math.floor((Math.random()*qByDiff.length)+1);\n        while (usedIndexes.find((p) => p == index)) {\n          index = Math.floor((Math.random()*qByDiff.length)+1);\n        }\n        usedIndexes.push(index);\n  \n        questions.push(qByDiff[index]);\n      }\n    }\n\n    return questions;\n  }\n\n  get HighScores() {\n    return this._http.get(\"http://localhost:3000/high-scores\");\n  }\n\n  finish(points:number) {\n    this.points = points;\n  }\n\n  get Points() {\n    return this.points;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}