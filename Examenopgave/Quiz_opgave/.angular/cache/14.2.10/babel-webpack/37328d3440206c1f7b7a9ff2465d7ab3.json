{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/inias/Desktop/ap/j2s1/WebFrameworks/Examenopgave/Quiz_opgave/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction QuizComponent_ng_container_4_div_5_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r8);\n  }\n}\n\nfunction QuizComponent_ng_container_4_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"select\");\n    i0.ɵɵtemplate(2, QuizComponent_ng_container_4_div_5_option_2_Template, 2, 1, \"option\", 1);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r1.options);\n  }\n}\n\nfunction QuizComponent_ng_container_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\");\n    i0.ɵɵtext(2, \"True\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\");\n    i0.ɵɵtext(4, \"False\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction QuizComponent_ng_container_4_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" You answered 'Thomas More' and the answer was 'AP' \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QuizComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2, 3)(3, \"label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, QuizComponent_ng_container_4_div_5_Template, 3, 1, \"div\", 4);\n    i0.ɵɵtemplate(6, QuizComponent_ng_container_4_div_6_Template, 5, 0, \"div\", 4);\n    i0.ɵɵtemplate(7, QuizComponent_ng_container_4_div_7_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n\n    const _r3 = i0.ɵɵreference(2);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", i_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r1.question);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.type == \"multiple\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.type == \"boolean\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.answered[_r3.id]);\n  }\n}\n\nexport class QuizComponent {\n  constructor(quizSvc, route) {\n    this.quizSvc = quizSvc;\n    this.route = route;\n    this.questions = [];\n    this.answered = [];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let difficulty = \"\";\n\n      _this.route.paramMap.subscribe(params => {\n        difficulty = params.get(\"diff\");\n      });\n\n      _this.questions = _this.quizSvc.getQuestionsByDifficulty(difficulty, 10);\n      console.log(_this.questions);\n\n      _this.answered.fill(false, 0, 9);\n    })();\n  }\n\n}\n\nQuizComponent.ɵfac = function QuizComponent_Factory(t) {\n  return new (t || QuizComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nQuizComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizComponent,\n  selectors: [[\"app-quiz\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[2, \"padding\", \"2px\"], [4, \"ngFor\", \"ngForOf\"], [3, \"id\"], [\"id\", \"\"], [4, \"ngIf\"]],\n  template: function QuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"10 Questions...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"div\", 0);\n      i0.ɵɵtemplate(4, QuizComponent_ng_container_4_Template, 9, 5, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\");\n      i0.ɵɵtext(6, \"Finish Quiz\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\".correct[_ngcontent-%COMP%] {\\r\\n    border: 2px solid green;\\r\\n    background-color: lightgreen;\\r\\n}\\r\\n\\r\\n.incorrect[_ngcontent-%COMP%] {\\r\\n    border: 2px solid red;\\r\\n    background-color: pink;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1aXouY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2Qiw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsc0JBQXNCO0FBQzFCIiwiZmlsZSI6InF1aXouY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb3JyZWN0IHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjtcclxufVxyXG5cclxuLmluY29ycmVjdCB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rO1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAWwBA;IAAgDA;IAAUA;;;;;IAAVA;IAAAA;;;;;;IAFxDA,4BAAyC,CAAzC,EAAyC,QAAzC;IAEQA;IACJA;;;;;IAD+BA;IAAAA;;;;;;IAGnCA,4BAAwC,CAAxC,EAAwC,QAAxC;IACYA;IAAIA;IACZA;IAAQA;IAAKA;;;;;;IAEjBA;IACIA;IACJA;;;;;;IAfRA;IAEIA,kCAAoB,CAApB,EAAoB,OAApB;IACWA;IAAqBA;IAC5BA;IAKAA;IAIAA;IAGAA;IACJA;IACJA;;;;;;;;;;IAhBaA;IAAAA;IACEA;IAAAA;IACDA;IAAAA;IAKAA;IAAAA;IAIAA;IAAAA;;;;ACRtB,OAAM,MAAOC,aAAP,CAAoB;EAKxBC,YAAoBC,OAApB,EAAkDC,KAAlD,EAAuE;IAAnD;IAA8B;IAHlD,iBAAwB,EAAxB;IACA,gBAAsB,EAAtB;EAE2E;;EAErEC,QAAQ;IAAA;;IAAA;MACZ,IAAIC,UAAU,GAAG,EAAjB;;MACA,KAAI,CAACF,KAAL,CAAWG,QAAX,CAAoBC,SAApB,CAA8BC,MAAM,IAAG;QACrCH,UAAU,GAAGG,MAAM,CAACC,GAAP,CAAW,MAAX,CAAb;MACD,CAFD;;MAIA,KAAI,CAACC,SAAL,GAAiB,KAAI,CAACR,OAAL,CAAaS,wBAAb,CAAsCN,UAAtC,EAAkD,EAAlD,CAAjB;MACAO,OAAO,CAACC,GAAR,CAAY,KAAI,CAACH,SAAjB;;MAEA,KAAI,CAACI,QAAL,CAAcC,IAAd,CAAmB,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B;IATY;EAUb;;AAjBuB;;;mBAAbf,eAAaD;AAAA;;;QAAbC;EAAagB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1BrB;MAAIA;MAAeA;MAEnBA,4BAAK,CAAL,EAAK,KAAL,EAAK,CAAL;MAGQA;MAmBJA;MAEAA;MAAQA;MAAWA;;;;MArBoBA;MAAAA","names":["i0","QuizComponent","constructor","quizSvc","route","ngOnInit","difficulty","paramMap","subscribe","params","get","questions","getQuestionsByDifficulty","console","log","answered","fill","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\inias\\Desktop\\ap\\j2s1\\WebFrameworks\\Examenopgave\\Quiz_opgave\\src\\app\\quiz\\quiz.component.html","C:\\Users\\inias\\Desktop\\ap\\j2s1\\WebFrameworks\\Examenopgave\\Quiz_opgave\\src\\app\\quiz\\quiz.component.ts"],"sourcesContent":["<h1>10 Questions...</h1>\n\n<div>\n    <div style=\"padding: 2px\">\n\n        <ng-container *ngFor=\"let question of questions, let i = index\">\n            <!-- Meekeuzevraag -->\n            <div #id id=\"{{i}}\">\n                <label>{{question.question}}</label>  <!-- De vraag -->\n                <div *ngIf=\"question.type == 'multiple'\">\n                    <select>     <!-- Mogelijke antwoorden -->\n                        <option *ngFor=\"let option of question.options\">{{option}}</option>\n                    </select>\n                </div>\n                <div *ngIf=\"question.type == 'boolean'\">  <!-- Antwoord knoppen -->\n                    <button>True</button>\n                    <button>False</button>\n                </div>\n                <div *ngIf=\"answered[id.id]\">    <!-- Feedback omtrent het gekozen antwoord -->\n                    You answered 'Thomas More' and the answer was 'AP'\n                </div>\n                <br/>\n            </div>\n        </ng-container>\n    </div>\n\n    <button>Finish Quiz</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Question } from '../services/types';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})\nexport class QuizComponent implements OnInit {\n\n  questions: Question[] = [];\n  answered: boolean[] = [];\n\n  constructor(private quizSvc: QuizService, private route: ActivatedRoute) {}\n\n  async ngOnInit() {\n    let difficulty = \"\";\n    this.route.paramMap.subscribe(params => {\n      difficulty = params.get(\"diff\")!;\n    });\n\n    this.questions = this.quizSvc.getQuestionsByDifficulty(difficulty, 10);\n    console.log(this.questions);\n\n    this.answered.fill(false, 0, 9);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}